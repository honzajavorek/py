version: 2.1

executors:
  python:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/project
  node:
    docker:
      - image: circleci/node:10
    working_directory: ~/project

jobs:
  install:
    executor: python
    steps:
      - checkout
      - run:
          name: install dependencies
          command: pipenv install --dev
      - persist_to_workspace:
          root: "~"
          paths:
              - .local/share/virtualenvs
              - project

  test:
    executor: python
    steps:
      - attach_workspace:
          at: "~"
      - run:
          name: run tests
          command: pipenv run test
      - run:
          # $CODECOV_TOKEN needs to be set
          name: send coverage report
          command: pipenv run codecov

  build_events:
    executor: python
    steps:
      - attach_workspace:
          at: "~"
      - run: pipenv run build data.events
      - persist_to_workspace:
          root: "~"
          paths:
              - project/data/events

  build_web:
    executor: python
    steps:
      - attach_workspace:
          at: "~"
      - run: pipenv run build_web
      - persist_to_workspace:
          root: "~"
          paths:
              - project/web/build

  deploy:
    executor: node
    steps:
      - attach_workspace:
          at: "~"
      - run:
          name: install 'now'
          command: sudo npm install --global --unsafe-perm now
      - run:
          # FIXME https://github.com/zeit/now-cli/issues/1856
          # FIXME simplify deployment
          # FIXME limit deployment to master
          # $NOW_TOKEN needs to be set
          name: deploy
          command: |
            now web/build --local-config=../../now.json --token=$NOW_TOKEN
            deployment_url=$(now ls pythoncz --token=$NOW_TOKEN | python -c 'import sys, re; print(re.search("pythoncz-[a-zA-Z0-9]+\\.now\\.sh", sys.stdin.read()).group(0))')
            now alias "$deployment_url" pythoncz.now.sh --token=$NOW_TOKEN

workflows:
  version: 2
  default_workflow: &default_workflow
    jobs:
      - install
      - test:
          requires:
            - install
      - build_events:
          requires:
            - test
      - build_web:
          requires:
            - build_events
      - deploy:
          requires:
            - build_web
  nightly_workflow:
    <<: *default_workflow
    triggers:
      - schedule:
          cron: "0 5 * * *"
          filters:
            branches:
              only:
                - master
